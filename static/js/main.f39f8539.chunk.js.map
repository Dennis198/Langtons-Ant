{"version":3,"sources":["LangtonsAnt/Field/Cell/cell.js","LangtonsAnt/Field/Ant/ant.js","LangtonsAnt/Field/field.js","LangtonsAnt/LangtonsAnt.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","x","y","width","state","this","pos","context","document","getElementById","getContext","fillStyle","fillRect","Ant","i","j","max_row","max_col","direction","offset","beginPath","arc","Math","PI","fill","Field","rows","cols","field","createField","ant","floor","Array","length","setState","draw","setPosition","turnRight","setSwitchState","moveForward","turnLeft","PrettoSlider","withStyles","root","color","height","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","background","track","borderRadius","rail","Slider","LangtonsAnt","props","intervalID","CANVAS_WIDTH","CANVAS_HEIGHT","isRunning","counterIteration","speed","mouseDown","setNewAntPosition","setInterval","oneStep","nextStep","clearInterval","setTimeout","e","canvas","getMousePos","setStateOfCell","evt","rect","getBoundingClientRect","clientX","clientY","val","setAntPosition","className","Button","disabled","variant","onClick","start","stop","moveAntOnClick","reset","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleSpeedChange","id","onMouseDown","allowDrawOnCanvas","onMouseUp","onMouseMove","mouseMove","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f39f8539.chunk.js","sourcesContent":["/*\r\nThis class handles the behavior of a Cell for the field\r\n*/\r\n\r\nexport default class Cell{\r\n    constructor(x,y,width,state=true){\r\n        this.pos={x:x,y:y};\r\n        this.width=width;\r\n        this.x = x;\r\n        this.state=state; //True=red, False=blue\r\n    }\r\n\r\n    //Sets the State of the Cell to a given state\r\n    setState(state){\r\n        this.state=state;\r\n    }\r\n    //Switches the State of the Cell\r\n    setSwitchState(){\r\n        this.state=!this.state;\r\n    }\r\n\r\n    //Draws the Rectangle on the Canvas\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        if(this.state){\r\n            context.fillStyle=\"crimson\";\r\n        } else {\r\n            context.fillStyle=\"lightblue\";    \r\n        }\r\n        \r\n        context.fillRect(this.pos.x,this.pos.y,this.width,this.width); \r\n    }\r\n}","/*\r\nThis File handles the computation of the moving ant\r\n*/\r\n\r\nconst ANTUP=0;\r\nconst ANTRIGHT=1;\r\nconst ANTDOWN=2;\r\nconst ANTLEFT=3;\r\n\r\nexport default class Ant{\r\n    constructor(i=0,j=0,width,max_row,max_col){\r\n        this.pos={i:i,j:j};\r\n        this.direction=ANTUP;\r\n        this.width=width;\r\n        this.max_row=max_row-1;\r\n        this.max_col=max_col-1;\r\n        this.offset=width/2;//to center the ant in an cell\r\n    }\r\n\r\n    //Sets the position of the Ant\r\n    setPosition(i,j){\r\n        this.pos.i=i;\r\n        this.pos.j=j;\r\n    }\r\n\r\n    //Sets a new Direction for the Ant ()\r\n    turnRight(){\r\n        this.direction++;\r\n        if(this.direction > ANTLEFT){\r\n            this.direction=ANTUP;\r\n        }\r\n    }\r\n    //Sets a new Direction fo the Ant\r\n    turnLeft(){\r\n        this.direction--;\r\n        if(this.direction < ANTUP){\r\n            this.direction = ANTLEFT;\r\n        }\r\n    }\r\n\r\n    //Sets the new Position of the Ant in depedence of the direction\r\n    moveForward(){\r\n        if(this.direction===ANTUP){\r\n            this.pos.i--;\r\n        } else if(this.direction===ANTRIGHT){\r\n            this.pos.j++;\r\n        } else if(this.direction===ANTDOWN){\r\n            this.pos.i++;\r\n        } else {\r\n            this.pos.j--;\r\n        }\r\n\r\n        //Handles the Edge Cases\r\n        if (this.pos.i > this.max_row){\r\n            this.pos.i=0;\r\n        } else if (this.pos.i<0){\r\n            this.pos.i=this.max_row;\r\n        }\r\n        //Handles the Edge Cases\r\n        if (this.pos.j > this.max_col){\r\n            this.pos.j=0;\r\n        } else if (this.pos.j<0){\r\n            this.pos.j=this.max_col;\r\n        }\r\n    }\r\n\r\n    //Draws the Ant as an Point\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.fillStyle =\"blue\";\r\n        context.beginPath();\r\n        context.arc(this.pos.i*this.width+this.offset, this.pos.j*this.width+this.offset, this.offset, 0, 2*Math.PI);\r\n        context.fill();\r\n    }\r\n}","/*\r\nThis file handles the computtation of the Cells and the ant\r\n*/\r\n\r\nimport Cell from \"./Cell/cell\";\r\nimport Ant from \"./Ant/ant\";\r\n\r\nexport default class Field{\r\n    constructor(rows,cols,width){\r\n        this.field = this.createField(rows,cols,width);\r\n        this.ant = new Ant(Math.floor(rows/2),Math.floor(cols/2),width,rows,cols); \r\n    }\r\n\r\n    //Creates the initial Field\r\n    createField(rows,cols,width){\r\n        let field = new Array(rows);\r\n        for(let i=0;i<field.length;i++){\r\n            field[i]= new Array(cols);\r\n            for(let j=0;j<field[i].length;j++){\r\n                field[i][j]=new Cell(i*width,j*width,width,false);\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n    //Sets the Cell.state with the index i,j to True\r\n    setStateOfCell(i,j){\r\n        this.field[i][j].setState(true);\r\n        this.field[i][j].draw();\r\n    }\r\n\r\n    //sets the Ant Position\r\n    setAntPosition(i,j){\r\n        this.field[this.ant.pos.i][this.ant.pos.j].draw();\r\n        this.ant.setPosition(i,j);\r\n        this.ant.draw();\r\n    }\r\n\r\n    //Calculates the next Step of the ant and display the outcome\r\n    nextStep(){\r\n        let pos = this.ant.pos;\r\n        if(this.field[pos.i][pos.j].state===false){\r\n            this.ant.turnRight();\r\n            this.field[pos.i][pos.j].setSwitchState();//=false;\r\n            this.field[pos.i][pos.j].draw();\r\n            this.ant.moveForward();\r\n        } else {\r\n            this.ant.turnLeft();            \r\n            this.field[pos.i][pos.j].setSwitchState();//=true;\r\n            this.field[pos.i][pos.j].draw();\r\n            this.ant.moveForward();\r\n        }\r\n        \r\n        this.ant.draw();\r\n    }\r\n\r\n    //Draws the hole field and the ant\r\n    draw(){\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                this.field[i][j].draw();\r\n            }\r\n        }\r\n        this.ant.draw();\r\n    }\r\n}","import React from 'react';\r\nimport \"./LangtonsAnt.css\";\r\nimport Field from \"./Field/field\";\r\nimport { Button, Slider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'gray',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\nconst CANVAS_WIDTH=900;\r\nconst CANVAS_HEIGHT=380;\r\nconst RESOLUTION=5;\r\nconst DEAFULT_SPEED=10;\r\n\r\nexport default class LangtonsAnt extends React.Component{\r\n    intervalID = 0;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            field: new Field(CANVAS_WIDTH/RESOLUTION,CANVAS_HEIGHT/RESOLUTION,RESOLUTION),\r\n            isRunning:false,\r\n            counterIteration:0,\r\n            speed:10,//in ms\r\n            mouseDown: false,\r\n            setNewAntPosition:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.state.field.draw();\r\n    }\r\n\r\n    //Comutes the next Stepof the ant every this.state.speed ms\r\n    start(){\r\n        this.setState({isRunning:true});\r\n        this.intervalID = setInterval(() =>{\r\n           this.oneStep();\r\n        },this.state.speed);        \r\n    }\r\n\r\n    //Computes the next Step of the Ant\r\n    oneStep(){\r\n        this.state.field.nextStep();\r\n        this.setState({counterIteration: this.state.counterIteration+1});\r\n    }\r\n\r\n    //Stops the Ant\r\n    stop(){\r\n        this.setState({isRunning:false});\r\n        clearInterval(this.intervalID);\r\n    }       \r\n\r\n    //Resets the Canvas to the initial State\r\n    reset(){\r\n        this.setState({field: new Field(CANVAS_WIDTH/RESOLUTION,CANVAS_HEIGHT/RESOLUTION,RESOLUTION), counterIteration:0})\r\n        setTimeout(() => {\r\n            this.state.field.draw();    \r\n        }, 10);       \r\n    }\r\n\r\n    //Handles the Mousemovment over the Canvas (Adds red Cells)\r\n    mouseMove(e){\r\n        if(!this.state.mouseDown){\r\n            return;\r\n        } \r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i= Math.floor(pos.x/(RESOLUTION));\r\n        let j= Math.floor(pos.y/(RESOLUTION));\r\n        this.state.field.setStateOfCell(i,j);\r\n    }\r\n\r\n    //Gets the Mouse position on the Canvas\r\n    getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    //Handles the speed change for the iteration timer\r\n    handleSpeedChange(e, val){\r\n        this.setState({speed: val});\r\n    }\r\n\r\n    //Sets the Variable on Mouse Down to true/ Mouse UP to false\r\n    allowDrawOnCanvas(){\r\n        this.setState({mouseDown: !this.state.mouseDown})\r\n    }\r\n\r\n    //\r\n    moveAntOnClick(e){\r\n        this.setState({setNewAntPosition: !this.state.setNewAntPosition});        \r\n    }\r\n\r\n    //Sets the new Position of the Ant\r\n    setNewAntPosition(e){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i= Math.floor(pos.x/(RESOLUTION));\r\n        let j= Math.floor(pos.y/(RESOLUTION));\r\n        this.state.field.setAntPosition(i,j);\r\n    }\r\n\r\n    render(){\r\n        const {isRunning, counterIteration, setNewAntPosition} = this.state;\r\n        return(\r\n            <div className=\"angtonsant\">\r\n                <h1>Langton's ant</h1>\r\n                <Button disabled={isRunning} variant=\"outlined\" onClick={()=>this.start()}>Start</Button>\r\n                <Button disabled={isRunning} variant=\"outlined\" onClick={()=>this.oneStep()}>Next Step</Button>\r\n                <Button variant=\"outlined\" onClick={()=>this.stop()}>Stop</Button>\r\n                <Button variant={setNewAntPosition?\"contained\":\"outlined\"} color=\"primary\" onClick={()=>this.moveAntOnClick()}>Move Ant</Button>\r\n                <Button variant=\"outlined\" onClick={()=>this.reset()}>Reset</Button>\r\n                <div className=\"angtonsant__speed__slider\">\r\n                    <h4>Computation Speed of an Iteration (ms)</h4>\r\n                    <PrettoSlider disabled={this.state.isRunning} valueLabelDisplay=\"on\"\r\n                        aria-label=\"pretto slider\" defaultValue={DEAFULT_SPEED} min={0.1} max={100} step={0.1}\r\n                        onChange={(e, val) => this.handleSpeedChange(e, val)}  \r\n                    />\r\n                </div>\r\n                <h4>Iterations: {counterIteration}</h4>\r\n                <canvas className=\"angtonsant_canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                    onMouseDown={!setNewAntPosition? ()=>this.allowDrawOnCanvas():(e)=>this.setNewAntPosition(e)}\r\n                    onMouseUp={!setNewAntPosition? ()=>this.allowDrawOnCanvas():()=>null}\r\n                    onMouseMove={(e) => this.mouseMove(e)}\r\n                ></canvas>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}","import './App.css';\nimport LangtonsAnt from \"./LangtonsAnt/LangtonsAnt\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n<LangtonsAnt></LangtonsAnt>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}