{"version":3,"sources":["LangtonsAnt/Field/Cell/cell.js","LangtonsAnt/Field/Ant/ant.js","LangtonsAnt/Field/field.js","LangtonsAnt/LangtonsAnt.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","x","y","width","state","this","pos","context","document","getElementById","getContext","fillStyle","fillRect","Ant","i","j","max_row","max_col","firstAnt","direction","offset","beginPath","arc","Math","PI","fill","Field","rows","cols","field","createField","ant","push","floor","Array","length","setState","draw","setPosition","turnRight","setSwitchState","moveForward","turnLeft","PrettoSlider","withStyles","root","color","height","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","background","track","borderRadius","rail","Slider","CANVAS_WIDTH","CANVAS_HEIGHT","LangtonsAnt","props","intervalID","isRunning","counterIteration","speed","mouseDown","setNewAntPosition","addNewAnt","resolution","setInterval","oneStep","nextStep","clearInterval","ceil","setTimeout","e","canvas","getMousePos","setStateOfCell","evt","rect","getBoundingClientRect","clientX","clientY","val","stop","start","setAntPosition","className","Button","disabled","variant","onClick","moveAntOnClick","addAntOnClick","reset","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleResolutionChange","handleSpeedChange","id","onMouseDown","addNewAntHere","allowDrawOnCanvas","onMouseUp","onMouseMove","mouseMove","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.484df0d7.chunk.js","sourcesContent":["/*\r\nThis class handles the behavior of a Cell for the field\r\n*/\r\n\r\nexport default class Cell{\r\n    constructor(x,y,width,state=true){\r\n        this.pos={x:x,y:y};\r\n        this.width=width;\r\n        this.x = x;\r\n        this.state=state; //True=red, False=blue\r\n    }\r\n\r\n    //Sets the State of the Cell to a given state\r\n    setState(state){\r\n        this.state=state;\r\n    }\r\n    //Switches the State of the Cell\r\n    setSwitchState(){\r\n        this.state=!this.state;\r\n    }\r\n\r\n    //Draws the Rectangle on the Canvas\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        if(this.state){\r\n            context.fillStyle=\"crimson\";\r\n        } else {\r\n            context.fillStyle=\"lightblue\";    \r\n        }\r\n        \r\n        context.fillRect(this.pos.x,this.pos.y,this.width,this.width); \r\n    }\r\n}","/*\r\nThis File handles the computation of the moving ant\r\n*/\r\n\r\nconst ANTUP=0;\r\nconst ANTRIGHT=1;\r\nconst ANTDOWN=2;\r\nconst ANTLEFT=3;\r\n\r\nexport default class Ant{\r\n    constructor(i=0,j=0,width,max_row,max_col,firstAnt=false){\r\n        this.pos={i:i,j:j};\r\n        this.direction=ANTUP;\r\n        this.width=width;\r\n        this.max_row=max_row-1;\r\n        this.max_col=max_col-1;\r\n        this.offset=width/2;//to center the ant in an cell\r\n        this.firstAnt=firstAnt; // The first ant is drawn in a different color\r\n    }\r\n\r\n    //Sets the position of the Ant\r\n    setPosition(i,j){\r\n        this.pos.i=i;\r\n        this.pos.j=j;\r\n    }\r\n\r\n    //Sets a new Direction for the Ant ()\r\n    turnRight(){\r\n        this.direction++;\r\n        if(this.direction > ANTLEFT){\r\n            this.direction=ANTUP;\r\n        }\r\n    }\r\n    //Sets a new Direction fo the Ant\r\n    turnLeft(){\r\n        this.direction--;\r\n        if(this.direction < ANTUP){\r\n            this.direction = ANTLEFT;\r\n        }\r\n    }\r\n\r\n    //Sets the new Position of the Ant in depedence of the direction\r\n    moveForward(){\r\n        if(this.direction===ANTUP){\r\n            this.pos.i--;\r\n        } else if(this.direction===ANTRIGHT){\r\n            this.pos.j++;\r\n        } else if(this.direction===ANTDOWN){\r\n            this.pos.i++;\r\n        } else {\r\n            this.pos.j--;\r\n        }\r\n\r\n        //Handles the Edge Cases\r\n        if (this.pos.i > this.max_row){\r\n            this.pos.i=0;\r\n        } else if (this.pos.i<0){\r\n            this.pos.i=this.max_row;\r\n        }\r\n        //Handles the Edge Cases\r\n        if (this.pos.j > this.max_col){\r\n            this.pos.j=0;\r\n        } else if (this.pos.j<0){\r\n            this.pos.j=this.max_col;\r\n        }\r\n    }\r\n\r\n    //Draws the Ant as an Point\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.fillStyle = this.firstAnt?\"yellow\":\"blue\";\r\n        context.beginPath();\r\n        context.arc(this.pos.i*this.width+this.offset, this.pos.j*this.width+this.offset, this.offset, 0, 2*Math.PI);\r\n        context.fill();\r\n    }\r\n}","/*\r\nThis file handles the computtation of the Cells and the ant\r\n*/\r\n\r\nimport Cell from \"./Cell/cell\";\r\nimport Ant from \"./Ant/ant\";\r\n\r\nexport default class Field{\r\n    constructor(rows,cols,width){\r\n        this.field = this.createField(rows,cols,width);\r\n        this.ant=[];\r\n        this.ant.push(new Ant(Math.floor(rows/2),Math.floor(cols/2),width,rows,cols, true)); \r\n    }\r\n\r\n    //Creates the initial Field\r\n    createField(rows,cols,width){\r\n        let field = new Array(rows);\r\n        for(let i=0;i<field.length;i++){\r\n            field[i]= new Array(cols);\r\n            for(let j=0;j<field[i].length;j++){\r\n                field[i][j]=new Cell(i*width,j*width,width,false);\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n    //Sets the Cell.state with the index i,j to True\r\n    setStateOfCell(i,j){\r\n        this.field[i][j].setState(true);\r\n        this.field[i][j].draw();\r\n    }\r\n\r\n    //sets the Ant Position\r\n    setAntPosition(i,j){\r\n        this.field[this.ant[0].pos.i][this.ant[0].pos.j].draw();\r\n        this.ant[0].setPosition(i,j);\r\n        this.ant[0].draw();\r\n    }\r\n\r\n    //Adds a new Ant\r\n    addNewAnt(i,j,width,){\r\n        this.ant.push(new Ant(i,j,width,this.field.length,this.field[0].length));\r\n        this.ant[this.ant.length-1].draw();\r\n    }\r\n\r\n    //Calculates the next Step of the ant and display the outcome\r\n    nextStep(){\r\n        for(let i=0;i<this.ant.length;i++){\r\n            let pos = this.ant[i].pos;\r\n            if(this.field[pos.i][pos.j].state===false){\r\n                this.ant[i].turnRight();\r\n                this.field[pos.i][pos.j].setSwitchState();//=false;\r\n                this.field[pos.i][pos.j].draw();\r\n                this.ant[i].moveForward();\r\n            } else {\r\n                this.ant[i].turnLeft();            \r\n                this.field[pos.i][pos.j].setSwitchState();//=true;\r\n                this.field[pos.i][pos.j].draw();\r\n                this.ant[i].moveForward();\r\n            }          \r\n            this.ant[i].draw();\r\n        }\r\n\r\n    }\r\n\r\n    //Draws the hole field and the ant\r\n    draw(){\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                this.field[i][j].draw();\r\n            }\r\n        }\r\n        for(let i=0;i<this.ant.length;i++){\r\n            this.ant[i].draw();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport \"./LangtonsAnt.css\";\r\nimport Field from \"./Field/field\";\r\nimport { Button, Slider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'gray',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\nconst CANVAS_WIDTH=900;\r\nconst CANVAS_HEIGHT=380;\r\nconst RESOLUTION=5;\r\nconst DEFAULT_SPEED=10;\r\n\r\nexport default class LangtonsAnt extends React.Component{\r\n    intervalID = 0;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            field: new Field(CANVAS_WIDTH/RESOLUTION,CANVAS_HEIGHT/RESOLUTION,RESOLUTION),\r\n            isRunning:false,\r\n            counterIteration:0,\r\n            speed:DEFAULT_SPEED,//in ms\r\n            mouseDown: false,\r\n            setNewAntPosition:false,\r\n            addNewAnt: false,\r\n            resolution: RESOLUTION,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.state.field.draw();\r\n    }\r\n\r\n    //Comutes the next Stepof the ant every this.state.speed ms\r\n    start(){\r\n        this.setState({isRunning:true});\r\n        this.intervalID = setInterval(() =>{\r\n           this.oneStep();\r\n        },this.state.speed);        \r\n    }\r\n\r\n    //Computes the next Step of the Ant\r\n    oneStep(){\r\n        this.state.field.nextStep();\r\n        this.setState({counterIteration: this.state.counterIteration+1});\r\n    }\r\n\r\n    //Stops the Ant\r\n    stop(){\r\n        this.setState({isRunning:false});\r\n        clearInterval(this.intervalID);\r\n    }       \r\n\r\n    //Resets the Canvas to the initial State\r\n    reset(){\r\n        this.setState({field: new Field(Math.ceil(CANVAS_WIDTH/this.state.resolution),Math.ceil(CANVAS_HEIGHT/this.state.resolution),this.state.resolution), counterIteration:0})\r\n        setTimeout(() => {\r\n            this.state.field.draw();    \r\n        }, 10);       \r\n    }\r\n\r\n    //Handles the Mousemovment over the Canvas (Adds red Cells)\r\n    mouseMove(e){\r\n        if(!this.state.mouseDown){\r\n            return;\r\n        } \r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i = Math.floor(pos.x/(this.state.resolution));\r\n        let j = Math.floor(pos.y/(this.state.resolution));\r\n        this.state.field.setStateOfCell(i,j);\r\n    }\r\n\r\n    //Gets the Mouse position on the Canvas\r\n    getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    \r\n     //Handles the Resolution Change (Slider) and creates a new Field\r\n    handleResolutionChange(e, val){\r\n      this.stop();\r\n      this.setState({resolution: val, field: new Field(Math.ceil(CANVAS_WIDTH/val),Math.ceil(CANVAS_HEIGHT/val),val)});\r\n      setTimeout(() => {\r\n          this.state.field.draw();\r\n      },10);\r\n    }\r\n\r\n    //Handles the speed change for the iteration timer\r\n    handleSpeedChange(e, val){\r\n        this.setState({speed: val});\r\n        if(this.state.isRunning){\r\n          this.stop();\r\n          this.start();\r\n        }\r\n    }\r\n\r\n    //Sets the Variable on Mouse Down to true/ Mouse UP to false\r\n    allowDrawOnCanvas(){\r\n        this.setState({mouseDown: !this.state.mouseDown})\r\n    }\r\n\r\n    //Allow two move the first Ant to a new Position by clicking on the canvas\r\n    moveAntOnClick(){\r\n        if(this.state.addNewAnt) this.setState({addNewAnt:false});\r\n        this.setState({setNewAntPosition: !this.state.setNewAntPosition});        \r\n    }\r\n\r\n    //Allow two add a new Ant by clicking on the canvas\r\n    addAntOnClick(){\r\n      if(this.state.setNewAntPosition) this.setState({setNewAntPosition:false});\r\n      this.setState({addNewAnt: !this.state.addNewAnt});        \r\n    }\r\n\r\n    //Sets the new Position of the first Ant\r\n    setNewAntPosition(e){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i= Math.floor(pos.x/(this.state.resolution));\r\n        let j= Math.floor(pos.y/(this.state.resolution));\r\n        this.state.field.setAntPosition(i,j);\r\n    }\r\n\r\n    //Add the new Ant on Click on the given position on the canvas\r\n    addNewAntHere(e){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i= Math.floor(pos.x/(this.state.resolution));\r\n        let j= Math.floor(pos.y/(this.state.resolution));\r\n        this.state.field.addNewAnt(i,j, this.state.resolution);\r\n    }\r\n\r\n    render(){\r\n        const {isRunning, counterIteration, setNewAntPosition, addNewAnt} = this.state;\r\n        return(\r\n            <div className=\"angtonsant\">\r\n                <h1>Langton's ant</h1>\r\n                <Button disabled={isRunning} variant=\"outlined\" onClick={()=>this.start()}>Start</Button>\r\n                <Button disabled={isRunning} variant=\"outlined\" onClick={()=>this.oneStep()}>Next Step</Button>\r\n                <Button variant=\"outlined\" onClick={()=>this.stop()}>Stop</Button>\r\n                <Button variant={setNewAntPosition?\"contained\":\"outlined\"} color=\"primary\" onClick={()=>this.moveAntOnClick()}>Move Ant</Button>\r\n                <Button variant={addNewAnt?\"contained\":\"outlined\"} color=\"primary\" onClick={()=>this.addAntOnClick()}>Add Ant</Button>\r\n                <Button variant=\"outlined\" onClick={()=>this.reset()}>Reset</Button>\r\n                <div className=\"langtonsant__sliders\">\r\n                    <div className=\"langtonsant__sliders_slider\">\r\n                        <h4>Resolution</h4>\r\n                        <PrettoSlider disabled={isRunning} valueLabelDisplay=\"off\"\r\n                        aria-label=\"pretto slider\" defaultValue={10} min={5} max={40} step={5}\r\n                        onChange={(e, val) => this.handleResolutionChange(e, val)}  \r\n                        />\r\n                    </div>\r\n                    <div className=\"langtonsant__sliders_slider\">\r\n                    <h4>Computation Speed(ms)</h4>\r\n                    <PrettoSlider valueLabelDisplay=\"on\"\r\n                        aria-label=\"pretto slider\" defaultValue={DEFAULT_SPEED} min={0.1} max={100} step={0.1}\r\n                        onChange={(e, val) => this.handleSpeedChange(e, val)}  \r\n                    />\r\n                    </div>\r\n                </div>\r\n                <h4>Iterations: {counterIteration}</h4>\r\n                <canvas className=\"angtonsant_canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                    onMouseDown={!setNewAntPosition? !addNewAnt? ()=>this.allowDrawOnCanvas():(e)=>this.addNewAntHere(e):(e)=>this.setNewAntPosition(e)}\r\n                    onMouseUp={!setNewAntPosition && !addNewAnt ? ()=>this.allowDrawOnCanvas():()=>null}\r\n                    onMouseMove={(e) => this.mouseMove(e)}\r\n                ></canvas>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}","import './App.css';\nimport LangtonsAnt from \"./LangtonsAnt/LangtonsAnt\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n<LangtonsAnt></LangtonsAnt>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}